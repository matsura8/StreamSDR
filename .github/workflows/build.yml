#
# Builds the application and uploads artifacts
#

name: Build Application

on:
  push:
    paths:
      - 'build/**'
      - 'src/**'
  pull_request:
    paths:
      - 'build/**'
      - 'src/**'

jobs:
  win-x64-build:
    name: Windows x64 Build
    runs-on: windows-latest

    permissions:
      actions: read
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Build libusb
        run: .\build.ps1 --exclusive -t BuildLibusb

      - name: Build rtl-sdr
        run: .\build.ps1 --exclusive -t BuildRtlSdr

      - name: Build StreamSDR
        run: .\build.ps1 --exclusive -t BuildStreamSDR

      - name: Upload artifact
        if: github.repository == 'orryverducci/StreamSDR' && github.ref_name == 'main' && github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: windows-x64
          path: artifacts/win-x64

  linux-x64-build:
    name: Linux x64 Build
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Build StreamSDR
        run: ./build.sh --exclusive -t BuildStreamSDR

      - name: Upload artifact
        if: github.repository == 'orryverducci/StreamSDR' && github.ref_name == 'main' && github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: linux-x64
          path: artifacts/linux-x64

  macos-x64-build:
    name: macOS x64 Build
    runs-on: macos-latest

    permissions:
      actions: read
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 6.0.x

      - name: Build StreamSDR
        run: ./build.sh --exclusive -t BuildStreamSDR

      - name: Add app signing certificate to Keychain
        if: github.repository == 'orryverducci/StreamSDR' && github.ref_name == 'main' && github.event_name == 'push'
        uses: apple-actions/import-codesign-certs@v1
        with: 
          p12-file-base64: ${{ secrets.MAC_SIGNING_CERT }}
          p12-password: ${{ secrets.MAC_SIGNING_CERT_KEY }}

      - name: Sign StreamSDR
        if: github.repository == 'orryverducci/StreamSDR' && github.ref_name == 'main' && github.event_name == 'push'
        env:
          MAC_SIGNING_CERT_NAME: ${{ secrets.MAC_SIGNING_CERT_NAME }}
        run: "./build.sh --exclusive -t SignApp --appcert \"$MAC_SIGNING_CERT_NAME\""

      - name: Upload app artifact
        if: github.repository == 'orryverducci/StreamSDR' && github.ref_name == 'main' && github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: macos-x64
          path: artifacts/osx-x64

      - name: Add installer signing certificate to Keychain
        if: github.repository == 'orryverducci/StreamSDR' && github.ref_name == 'main' && github.event_name == 'push'
        uses: apple-actions/import-codesign-certs@v1
        with: 
          p12-file-base64: ${{ secrets.MAC_INSTALLER_CERT }}
          p12-password: ${{ secrets.MAC_INSTALLER_CERT_KEY }}

      - name: Create installer package
        if: github.repository == 'orryverducci/StreamSDR' && github.ref_name == 'main' && github.event_name == 'push'
        env:
          MAC_SIGNING_CERT_NAME: ${{ secrets.MAC_INSTALLER_CERT_NAME }}
        run: "./build.sh --exclusive -t CreateInstaller --installcert \"$MAC_INSTALLER_CERT_NAME\""

      - name: Upload installer artifact
        if: github.repository == 'orryverducci/StreamSDR' && github.ref_name == 'main' && github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: macos-x64-installer
          path: artifacts/osx-x64-installer
  
  docker-build:
    name: Docker Image Build
    if: github.repository == 'orryverducci/StreamSDR' && github.ref_name == 'main' && github.event_name == 'push'
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Log in to the container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build container image
        run: ./build.sh --exclusive -t BuildDockerImage --registry ghcr.io

      - name: Push container
        run: docker push --all-tags ghcr.io/orryverducci/streamsdr
